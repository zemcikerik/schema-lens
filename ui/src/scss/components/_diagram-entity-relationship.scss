@use '@angular/material' as mat;
@use '../theme' as t;

.diagram-entity-relationship {
  position: relative;
  height: 100%;

  &__entity {
    display: flex;
    flex-direction: column;
    user-select: none;
    height: 100%;

    .djs-dragging & {
      display: none;
    }

    &__resizer .djs-resizer-visual {
      fill: mat.get-theme-color(t.$theme, outline);
    }

    &__name {
      display: block;
      font: mat.get-theme-typography(t.$theme, label-large);
      padding: 0 0.5rem;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow-x: hidden;
    }

    &__attributes {
      border-collapse: collapse;

      &__wrapper {
        flex-grow: 1;
        background-color: mat.get-theme-color(t.$theme, secondary-container);
        border: 1px solid mat.get-theme-color(t.$theme, outline-variant);
        color: mat.get-theme-color(t.$theme, on-secondary-container);
        border-radius: 0.5rem;
        padding: 0.5rem;
      }

      td {
        height: 1.625rem;
        padding: 1px;

        & + td {
          padding-left: 1rem;
        }

        &.primary-key {
          color: mat.get-theme-color(t.$theme, primary);
          padding: 0 1px;

          mat-icon {
            width: 1.25rem;
            height: 1.25rem;
            font-size: 1.25rem;
          }
        }

        &.primary-key + td {
          padding-left: 0.5rem;
        }
      }
    }
  }

  &__relationship {
    fill: none;
    stroke: mat.get-theme-color(t.$theme, on-surface-variant);
    stroke-width: 0.125rem;
    shape-rendering: geometricPrecision;

    &.non-identifying {
      stroke-dasharray: 8 4;
    }

    &__one-side,
    &__many-side {
      stroke: mat.get-theme-color(t.$theme, on-surface-variant);
    }

    &__one-side > circle {
      fill: mat.get-theme-color(t.$theme, surface);
    }
  }

  &__zoom {
    position: absolute;
    right: 0;
    bottom: 0;
  }
}
